# NOTE Lines must not exceed 132 characters
# Robot module configurations : general handling of movement G-codes and slicing into moves
default_feed_rate                            4000             # Default rate ( mm/minute ) for G1/G2/G3 moves
default_seek_rate                            4000             # Default rate ( mm/minute ) for G0 moves
mm_per_arc_segment                           0.0              # Fixed length for line segments that divide arcs 0 to disable
mm_max_arc_error                             0.01             # The maximum error for line segments that divide arcs 0 to disable
                                                              # note it is invalid for both the above be 0
                                                              # if both are used, will use largest segment length based on radius
#mm_per_line_segment                         0.5              # Lines can be cut into segments ( not useful with cartesian
                                                              # coordinates robots ).
delta_segments_per_second                    100              # for deltas only same as in Marlin/Delta, set to 0 to disable
                                                              # and use mm_per_line_segment

# Arm solution configuration : Cartesian robot. Translates mm positions into stepper positions
#alpha_steps_per_mm                           80              # Steps per mm for alpha stepper
#beta_steps_per_mm                            80              # Steps per mm for beta stepper
#gamma_steps_per_mm                           80              # Steps per mm for gamma stepper

# Planner module configuration : Look-ahead and acceleration configuration
planner_queue_size                           32               # DO NOT CHANGE THIS UNLESS YOU KNOW EXACTLY WHAT YOU ARE DOING
acceleration                                 3000             # Acceleration in mm/second/second.
#z_acceleration                              500              # Acceleration for Z only moves in mm/s^2, 0 uses acceleration which is the default. DO NOT SET ON A DELTA
acceleration_ticks_per_second                1000             # Number of times per second the speed is updated
junction_deviation                           0.05             # Similar to the old "max_jerk", in millimeters,
                                                              # see https://github.com/grbl/grbl/blob/master/planner.c
                                                              # and https://github.com/grbl/grbl/wiki/Configuring-Grbl-v0.8
                                                              # Lower values mean being more careful, higher values means being
                                                              # faster and have more jerk
#z_junction_deviation                        0.0              # for Z only moves, -1 uses junction_deviation, zero disables junction_deviation on z moves DO NOT SET ON A DELTA
#minimum_planner_speed                       0.0              # sets the minimum planner speed in mm/sec

# Stepper module configuration
microseconds_per_step_pulse                  5                # Duration of step pulses to stepper drivers, in microseconds
base_stepping_frequency                      100000           # Base frequency for stepping

# Cartesian axis speed limits
x_axis_max_speed                             60000            # mm/min
y_axis_max_speed                             60000            # mm/min
z_axis_max_speed                             60000            # mm/min

# Arm solution configuration : Rotatable Delta robot. Translates mm positions into stepper positions
arm_solution                                    rotary_delta   # selects the delta arm solution

delta_e                                         131.636        # End effector length, triangle side length in mm
delta_f                                         190.526        # Base length, triangle side length in mm
delta_re                                        270.000        # Carbon rod length
delta_rf                                        90.000         # Servo horn length

delta_z_offset                                  268.0          # Distance from big pulley shaft to table/bed
delta_ee_offs                                   15.000         # Ball joint plane to bottom of end effector surface
delta_tool_offset                               30.500         # Distance between end effector ball joint plane and tip of tool (PnP)

delta_mirror_xy                                 true           # true for firepick

# For a FirePick Rotary Delta, the steps per degree are calculated as:
#
# (1) First determine the circumference of the big pulley, which has a smooth surface, and calculate the 'teeth it would have'
# (2) Determine the GT2 belt thickness and tooth depth
# (3) Calculate the ACTUAL big pulley circumference taking into account that the GT2 belt affects this as
#     it rests on the big pulley and not into teeth cut into the pulley, the formula is:
#     BIG_PULLEY_CIRCUMFERENCE = BIG_PULLEY_TEETH * TOOTH_SPACING + (BELT_THICKNESS - TOOTH_DEPTH)*6.283185
# (4) Calculate the ACTUAL small pulley circumference taking into account that the GT2 belt affects this as
#     rests into the small pulley as it has teeth cut into the pulley, the formula is:
#     SMALL_PULLEY_CIRCUMFERENCE = SMALL_PULLEY_TEETH * TOOTH_SPACING
# (5) Now determine the pulley reduction which is:
#     PULLEY_REDUCTION = BIG_PULLEY_CIRCUMFERENCE / SMALL_PULLEY_CIRCUMFERENCE
# (6) Finally, given the number of steps a stepper motor needs for a full 360 degree rotation, and the number of microsteps your
#     stepper motor driver chip is set for, you can calculate the STEPS_PER_MM for each axis, which for a Rotary Delta, are the same:
#    [ALPHA/BETA/GAMMA]_STEPS_PER_MM = (XYZ_STEPS_PER_ROTATION*XYZ_MICROSTEPS*PULLEY_REDUCTION)/360
#    e.g. a FirePick Delta mechanism, we can calculate:
#    BIG_PULLEY_CIRCUMFERENCE = 150 * 2 + (1.49 - 0.74) * 6.283185 = 304.712389
#    SMALL_PULLEY_CIRCUMFERENCE = 16 * 2 = 32
#    PULLEY_REDUCTION = 304.712389 / 32 = 9.52226215
#    For a 0.9 degree stepper motor and an a4988   driver set for  16 microsteps = (400 * 16  * 9.52226215)/360 =  169.2846604
#    For a 1.8 degree stepper motor and an a4988   driver set for  16 microsteps = (200 * 16  * 9.52226215)/360 =   84.6423302
#    For a 0.9 degree stepper motor and an drv8825 driver set for  32 microsteps = (400 * 32  * 9.52226215)/360 =  338.5693208
#    For a 1.8 degree stepper motor and an drv8825 driver set for  32 microsteps = (200 * 32  * 9.52226215)/360 =  169.2846604
#    For a 0.9 degree stepper motor and an TMC2130 driver set for 256 microsteps = (400 * 256 * 9.52226215)/360 = 2708.554567
#    For a 1.8 degree stepper motor and an TMC2130 driver set for 256 microsteps = (200 * 256 * 9.52226215)/360 = 1354.277284

alpha_steps_per_mm                           2708.554567      # Steps per mm for alpha stepper
beta_steps_per_mm                            2708.554567      # Steps per mm for beta stepper
gamma_steps_per_mm                           2708.554567      # Steps per mm for gamma stepper

# Stepper module pins ( ports, and pin numbers, appending "!" to the number will invert a pin )
alpha_step_pin                               5.0              # Pin for alpha stepper step signal
alpha_dir_pin                                6.12             # Pin for alpha stepper direction
alpha_en_pin                                 4.10             # Pin for alpha enable pin
alpha_current                                1.5              # X stepper motor current
alpha_max_rate                               60000.0          # mm/min

beta_step_pin                                5.7              # Pin for beta stepper step signal
beta_dir_pin                                 5.5              # Pin for beta stepper direction
beta_en_pin                                  7.6              # Pin for beta enable
beta_current                                 1.5              # Y stepper motor current
beta_max_rate                                60000.0          # mm/min

gamma_step_pin                               4.0              # Pin for gamma stepper step signal
gamma_dir_pin                                1.7              # Pin for gamma stepper direction
gamma_en_pin                                 6.9              # Pin for gamma enable
gamma_current                                1.5              # Z stepper motor current
gamma_max_rate                               60000.0          # mm/min

#SilentStepStick TMC2130 setup
motor_driver_control.alpha.enable            true             # alpha (X) is a TMC2130
motor_driver_control.alpha.designator        A                # A to set the settings
motor_driver_control.alpha.chip              TMC2130          # chip name
motor_driver_control.alpha.current           31               # current in 0..31 representing a ratio of 1/32 .. 32/32
motor_driver_control.alpha.max_current       31               # max current in 0..31 representing a ratio of 1/32 .. 32/32
motor_driver_control.alpha.microsteps        256              # microsteps
motor_driver_control.alpha.alarm             true             # set to true means the error bits are checked
motor_driver_control.alpha.halt_on_alarm     false            # if set to true means ON_HALT is entered on any error bits being set
motor_driver_control.alpha.spi_channel       0                # SPI channel 1 is sdcard channel
motor_driver_control.alpha.spi_cs_pin        7.4              # SPI CS pin
#motor_driver_control.alpha.spi_frequency    1000000          # SPI frequency

motor_driver_control.beta.enable             true             # beta (Y) is a TMC2130
motor_driver_control.beta.designator         B                # B to set the settings
motor_driver_control.beta.chip               TMC2130          # chip name
motor_driver_control.beta.current            31               # current in 0..31 representing a ratio of 1/32 .. 32/32
motor_driver_control.beta.max_current        31               # max current in 0..31 representing a ratio of 1/32 .. 32/32
motor_driver_control.beta.microsteps         256              # microsteps
motor_driver_control.beta.alarm              true             # set to true means the error bits are checked
motor_driver_control.beta.halt_on_alarm      false            # if set to true means ON_HALT is entered on any error bits being set
motor_driver_control.beta.spi_channel        0                # SPI channel 1 is sdcard channel
motor_driver_control.beta.spi_cs_pin         7.5              # SPI CS pin
#motor_driver_control.beta.spi_frequency     1000000          # SPI frequency

motor_driver_control.gamma.enable            true             # gamma (Z) is a TMC2130
motor_driver_control.gamma.designator        C                # C to set the settings
motor_driver_control.gamma.chip              TMC2130          # chip name
motor_driver_control.gamma.current           31               # current in 0..31 representing a ratio of 1/32 .. 32/32
motor_driver_control.gamma.max_current       31               # max current in 0..31 representing a ratio of 1/32 .. 32/32
motor_driver_control.gamma.microsteps        256              # microsteps
motor_driver_control.gamma.alarm             true             # set to true means the error bits are checked
motor_driver_control.gamma.halt_on_alarm     false            # if set to true means ON_HALT is entered on any error bits being set
motor_driver_control.gamma.spi_channel       0                # SPI channel 1 is sdcard channel ???
motor_driver_control.gamma.spi_cs_pin        1.0              # SPI CS pin
#motor_driver_control.gamma.spi_frequency    1000000          # SPI frequency

## System configuration
# Serial communications configuration ( baud rate defaults to 9600 if undefined )
uart0.baud_rate                              115200           # Baud rate for the default hardware serial port
second_usb_serial_enable                     false            # This enables a second usb serial port (to have both pronterface
                                                              # and a terminal connected)
#leds_disable                                true             # disable using leds after config loaded
#play_led_disable                            true             # disable the play led

# Kill button (used to be called pause) maybe assigned to a different pin, set to the onboard pin by default
kill_button_enable                           false            # set to true to enable a kill button
kill_button_pin                              2.12             # kill button pin. default is same as pause button 2.12 (2.11 is another good choice)

#msd_disable                                 false            # disable the MSD (USB SDCARD) when set to true (needs special binary)
#dfu_enable                                  false            # for linux developers, set to true to enable DFU
#watchdog_timeout                            10               # watchdog timeout in seconds, default is 10, set to 0 to disable the watchdog

# Only needed on a smoothieboard
currentcontrol_module_enable                 false            #

## Extruder module configuration
extruder.hotend.enable                       false            # Whether to activate the extruder module at all. All configuration is ignored if false
extruder.hotend.steps_per_mm                 140              # Steps per mm for extruder stepper
extruder.hotend.default_feed_rate            600              # Default rate ( mm/minute ) for moves where only the extruder moves
extruder.hotend.acceleration                 500              # Acceleration for the stepper motor mm/sec²
extruder.hotend.max_speed                    50               # mm/s

extruder.hotend.step_pin                     6.4              # Pin for extruder step signal
extruder.hotend.dir_pin                      6.5              # Pin for extruder dir signal
extruder.hotend.en_pin                       1.7              # Pin for extruder enable signal


# Second extruder module configuration
extruder.hotend2.enable                      false            # Whether to activate the extruder module at all. All configuration is ignored if false
extruder.hotend2.steps_per_mm                140              # Steps per mm for extruder stepper
extruder.hotend2.default_feed_rate           600              # Default rate ( mm/minute ) for moves where only the extruder moves
extruder.hotend2.acceleration                500              # Acceleration for the stepper motor, as of 0.6, arbitrary ratio
extruder.hotend2.max_speed                   50               # mm/s

extruder.hotend2.step_pin                    6.10             # Pin for extruder step signal
extruder.hotend2.dir_pin                     2.9              # Pin for extruder dir signal
extruder.hotend2.en_pin                      2.8              # Pin for extruder enable signal


## Laser module configuration
laser_module_enable                          false            # Whether to activate the laser module at all. All configuration is
                                                              # ignored if false.
## Temperature control configuration
# First hotend configuration
temperature_control.hotend.enable            false            # Whether to activate this ( "hotend" ) module at all.
                                                              # All configuration is ignored if false.
temperature_control.hotend.thermistor_pin    adc.5            # Pin for the thermistor to read
temperature_control.hotend.heater_pin        7.5              # Pin that controls the heater, set to nc if a readonly thermistor is being defined
temperature_control.hotend.thermistor        EPCOS100K        # see http://smoothieware.org/temperaturecontrol#toc5
#temperature_control.hotend.beta             4066             # or set the beta value
temperature_control.hotend.set_m_code        104              #
temperature_control.hotend.set_and_wait_m_code 109            #
temperature_control.hotend.designator        T                #
#temperature_control.hotend.max_temp         300              # Set maximum temperature - Will prevent heating above 300 by default
#temperature_control.hotend.min_temp         0                # Set minimum temperature - Will prevent heating below if set

#temperature_control.hotend.p_factor         13.7             # permanently set the PID values after an auto pid
#temperature_control.hotend.i_factor         0.097            #
#temperature_control.hotend.d_factor         24               #

#temperature_control.hotend.max_pwm          64               # max pwm, 64 is a good value if driving a 12v resistor with 24v.

# Second hotend configuration
temperature_control.hotend2.enable            false           # Whether to activate this ( "hotend" ) module at all.
                                                              # All configuration is ignored if false.

temperature_control.hotend2.thermistor_pin    adc.7           # Pin for the thermistor to read
temperature_control.hotend2.heater_pin        7.7             # Pin that controls the heater
temperature_control.hotend2.thermistor        EPCOS100K       # see http://smoothieware.org/temperaturecontrol#toc5
#temperature_control.hotend2.beta             4066            # or set the beta value
temperature_control.hotend2.set_m_code        104             #
temperature_control.hotend2.set_and_wait_m_code 109           #
temperature_control.hotend2.designator        T1              #

#temperature_control.hotend2.p_factor          13.7           # permanently set the PID values after an auto pid
#temperature_control.hotend2.i_factor          0.097          #
#temperature_control.hotend2.d_factor          24             #

#temperature_control.hotend2.max_pwm          64              # max pwm, 64 is a good value if driving a 12v resistor with 24v.

temperature_control.bed.enable               false            #
temperature_control.bed.thermistor_pin       adc.2            #
temperature_control.bed.heater_pin           7.7              #
temperature_control.bed.thermistor           Honeywell100K    # see http://smoothieware.org/temperaturecontrol#toc5
#temperature_control.bed.beta                3974             # or set the beta value

temperature_control.bed.set_m_code           140              #
temperature_control.bed.set_and_wait_m_code  190              #
temperature_control.bed.designator           B                #

#temperature_control.bed.bang_bang            false           # set to true to use bang bang control rather than PID
#temperature_control.bed.hysteresis           2.0             # set to the temperature in degrees C to use as hysteresis
                                                              # when using bang bang

## Switch module for fan control
switch.fan.enable                            false            #
switch.fan.input_on_command                  M106             #
switch.fan.input_off_command                 M107             #
switch.fan.output_pin                        4.1              #
switch.fan.output_type                       pwm              # pwm output settable with S parameter in the input_on_comand
switch.fan.max_pwm                           255              # set max pwm for the pin default is 255

switch.misc.enable                           false            #
switch.misc.input_on_command                 M42              #
switch.misc.input_off_command                M43              #
switch.misc.output_pin                       7.7              #
switch.misc.output_type                      pwm              # just an on or off pin

## Endstops
endstops_enable                              true             # the endstop module is enabled by default and can be disabled here
rdelta_homing                                true             # forces all three axis to home a the same time regardless of
                                                              # what is specified in G28
alpha_min_endstop                            7.4!^            #
alpha_max_endstop                            7.7^             # add ! to invert pullup if switch is NO to ground
alpha_homing_direction                       home_to_max      # Home up

alpha_max                                    300              #
beta_min_endstop                             7.5!^            #
beta_max_endstop                             4.3^             #
beta_homing_direction                        home_to_max      #
beta_max                                     300              #
gamma_min_endstop                            4.1!^            #
gamma_max_endstop                            4.4^             #
gamma_homing_direction                       home_to_max      #
gamma_max                                    300              #

# optional enable limit switches, actions will stop if any enabled limit switch is triggered
alpha_limit_enable                           true            # set to true to enable X min and max limit switches
beta_limit_enable                            true            # set to true to enable Y min and max limit switches
gamma_limit_enable                           true            # set to true to enable Z min and max limit switches

alpha_fast_homing_rate_mm_s                  500              # feedrates in mm/second
beta_fast_homing_rate_mm_s                   500              # "
gamma_fast_homing_rate_mm_s                  500              # "

alpha_slow_homing_rate_mm_s                  50               # "
beta_slow_homing_rate_mm_s                   50               # "
gamma_slow_homing_rate_mm_s                  50               # "

alpha_homing_retract_mm                      5                # distance in mm
beta_homing_retract_mm                       5                # "
gamma_homing_retract_mm                      5                # "

endstop_debounce_count                       100              # uncomment if you get noise on your endstops, default is 100

alpha_trim                                   0                # software trim for alpha stepper endstop (in mm)
beta_trim                                    0                # software trim for beta stepper endstop (in mm)
gamma_trim                                   0                # software trim for gamma stepper endstop (in mm)

# optional Z probe
zprobe.enable                                true             # set to true to enable a zprobe
#zprobe.probe_pin                            4.4!^            # pin probe is attached to if NC remove the !
zprobe.slow_feedrate                         5                # mm/sec probe feed rate
#zprobe.debounce_count                       100              # set if noisy
zprobe.fast_feedrate                         100              # move feedrate mm/sec
zprobe.probe_height                          15               # how much above bed to start probe

# DistanceProbes
distanceprobes_enable	                     true
#rdelta_homing                                true             # forces all three axis to home a the same time regardless of

